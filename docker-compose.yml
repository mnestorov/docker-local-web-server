version: '3.9'

networks:
  web:
    external: true
    ipam:
      config:
        - subnet: 172.19.0.0/16
  internal:
    external: false

services:
  traefik:
    container_name: traefik
    image: traefik:v2.9
    ports:
      - "80:80" # The HTTP port
      - "443:443"
      - "8080:8080"
      - "9900:9900"
      - "9901:9901"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./docker_files/traefik.toml:/etc/traefik/traefik.toml
      - ./docker_files/traefik_secure.toml:/etc/traefik/traefik_secure.toml
      - ./docker_files/cert:/etc/traefik/cert
      - ./docker_files/cert-key:/etc/traefik/cert-key
      - ./docker_files/ssl/:/etc/traefik/
    networks:
      web:
        ipv4_address: 172.19.0.2
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.rule=Host(`traefik.localhost`)
      - traefik.http.routers.api.tls.options=default
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.service=api@internal
    restart: always

  portainer:
    image: portainer/portainer-ce:latest # A container that exposes an API to show it's IP address
    container_name: portainer
    restart: always
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.routers.portainer.rule=Host(`portainer.localhost`)
      - traefik.http.routers.portainer.tls.options=default
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    networks:
      web:
        ipv4_address: 172.19.0.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  db:
    image: mariadb:10.4.13
    container_name: mariadb
    hostname: mariadb
    mem_reservation: 4000M
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker_files/database/backups:/var/tmp/backups
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.db.entrypoints=websecure
      - traefik.http.routers.db.rule=Host(`mariadb.localhost`)
      - traefik.http.routers.db.tls.options=default
      - traefik.http.services.db.loadbalancer.server.port=3306
    networks:
      web:
        ipv4_address: 172.19.0.4

  phpmyadmin:
    container_name: phpmyadmin
    build:
      context: .
      dockerfile: docker_files/phpmyadmin/Dockerfile
    depends_on:
      - db
    links:
      - db
    restart: always
    volumes:
      - ./docker_files/phpmyadmin/darkwolf:/var/www/html/themes/darkwolf
      - ./docker_files/phpmyadmin/boodark:/var/www/html/themes/boodark
      - /sessions
      - ./docker_files/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php
      - /var/run/mysqld/mysqld.sock:/tmp/mysqld.sock
    environment:
      UPLOAD_LIMIT: 4G
      POST_MAX_SIZE: 4G
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.phpmyadmin.entrypoints=websecure
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)
      - traefik.http.routers.phpmyadmin.tls.options=default
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80
    networks:
      web:
        ipv4_address: 172.19.0.5
        
  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - db
    restart: always
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.adminer.entrypoints=websecure
      - traefik.http.routers.adminer.rule=Host(`adminer.localhost`)
      - traefik.http.routers.adminer.tls.options=default
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    networks:
      web:   
        ipv4_address: 172.19.0.6

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # The HTTP port
      - "8025:8025"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.mailhog.entrypoints=websecure
      - traefik.http.routers.mailhog.rule=Host(`mailhog.localhost`)
      - traefik.http.routers.mailhog.tls.options=default
      - traefik.http.services.mailhog.loadbalancer.server.port=8025
    networks:
      web:
        ipv4_address: 172.19.0.7
    volumes:
      - mail-hog_data:/data

volumes:
  dbdata:
    driver: local
  portainer_data:
  mail-hog_data:
  certs: